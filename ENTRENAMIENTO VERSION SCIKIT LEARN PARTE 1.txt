!pip install joblib
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, accuracy_score
import joblib

# Cargar los datos ficticios desde un CSV
data = pd.read_csv('ficticio.csv')

# Dividir los datos en entrenamiento y prueba
X = data['Descripción_Problema']
y = data['Departamento']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear un vectorizador TF-IDF para convertir texto en características numéricas
vectorizer = TfidfVectorizer(max_features=1000, stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Entrenar un modelo de clasificación (en este ejemplo, Naive Bayes)
clf = MultinomialNB()
clf.fit(X_train_tfidf, y_train)

# Guardar el modelo en un archivo
joblib.dump(clf, 'modelo_clasificacion.pkl')

# Realizar predicciones en los datos de prueba
y_pred = clf.predict(X_test_tfidf)

# Evaluar el rendimiento del modelo
print("Informe de clasificación:")
print(classification_report(y_test, y_pred))
print("Exactitud:", accuracy_score(y_test, y_pred))